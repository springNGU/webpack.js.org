(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{459:function(n,t,s){"use strict";s.r(t),t.default='<h1 id="webpack">webpack<a href="#webpack" aria-hidden="true"><span class="icon icon-link"></span></a></h1>\n<h2 id="write-your-code">Write Your Code<a href="#write-your-code" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<div class="splash__wrap">\n<div class="splash__left">\n<p><strong>src/index.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> bar <span class="token keyword">from</span> <span class="token string">\'./bar\'</span><span class="token punctuation">;</span>\n\n<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n</div>\n<div class="splash__right">\n<p><strong>src/bar.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">//</span>\n<span class="token punctuation">}</span></code></pre>\n</div>\n</div>\n<h2 id="bundle-it">Bundle It<a href="#bundle-it" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<div class="splash__wrap">\n<div class="splash__left">\n<p><strong><a href="https://youtu.be/3Nv9muOkb6k?t=21293">Without config</a></strong> or provide custom <strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'path\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'./src/index.js\'</span><span class="token punctuation">,</span>\n  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'dist\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    filename<span class="token punctuation">:</span> <span class="token string">\'bundle.js\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n</div>\n<div class="splash__right">\n<p><strong>page.html</strong></p>\n<pre><code class="hljs language-html"><span class="token doctype">&#x3C;!doctype html></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>html</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>head</span><span class="token punctuation">></span></span>\n    ...\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>head</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>body</span><span class="token punctuation">></span></span>\n    ...\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dist/bundle.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>script</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>html</span><span class="token punctuation">></span></span></code></pre>\n</div>\n</div>\n<p>Then run <code>webpack</code> on the command-line to create <code>bundle.js</code>.</p>\n<h2 id="awesome-isnt-it-lets-dive-in">Awesome isn\'t it? Let\'s dive in!<a href="#awesome-isnt-it-lets-dive-in" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><strong><a href="/guides/getting-started">Get Started</a></strong> quickly in our <strong>Guides</strong> section, or dig into the <strong><a href="/concepts">Concepts</a></strong> section for more high-level information on the core notions behind webpack.</p>\n<h1 id="comparison">Comparison<a href="#comparison" aria-hidden="true"><span class="icon icon-link"></span></a></h1>\n<p>webpack 并非唯一的模块打包工具。当您面临选择 webpack 或者是其他模块打包工具时，请参见以下 webpack 与其他竞品的功能对比表格。</p>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>webpack/webpack</th>\n<th>jrburke/requirejs</th>\n<th>substack/node-browserify</th>\n<th>jspm/jspm-cli</th>\n<th>rollup/rollup</th>\n<th>brunch/brunch</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>按需加载额外 chunks<p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td><strong>yes</strong></td>\n<td>no</td>\n<td><a href="https://github.com/systemjs/systemjs/blob/master/docs/system-api.md#systemimportmodulename--normalizedparentname---promisemodule">System.import</a></td>\n<td>no</td>\n<td>no</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>AMD <code>define</code><p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td><strong>yes</strong></td>\n<td><a href="https://github.com/jaredhanson/deamdify">deamdify</a></td>\n<td>yes</td>\n<td><a href="https://github.com/piuccio/rollup-plugin-amd">rollup-plugin-amd</a></td>\n<td>yes</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>AMD <code>require</code><p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td><strong>yes</strong></td>\n<td>no</td>\n<td>yes</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>AMD <code>require</code> 按需加载<p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>手动配置</td>\n<td>no</td>\n<td>yes</td>\n<td>no</td>\n<td>no</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>CommonJS <code>exports</code><p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>仅包裹在 \n<code>define</code>\n 中</td>\n<td><strong>yes</strong></td>\n<td>yes</td>\n<td><a href="https://github.com/rollup/rollup-plugin-commonjs">commonjs-plugin</a></td>\n<td>yes</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>CommonJS <code>require</code><p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>仅包裹在 \n<code>define</code>\n 中</td>\n<td><strong>yes</strong></td>\n<td>yes</td>\n<td><a href="https://github.com/rollup/rollup-plugin-commonjs">commonjs-plugin</a></td>\n<td>yes</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>CommonJS <code>require.resolve</code><p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>no</td>\n<td>no</td>\n<td>no</td>\n<td>no</td>\n<td></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>在 require 中使用拼接 <code>require("./fi" + "le")</code><p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>no♦</td>\n<td>no</td>\n<td>no</td>\n<td>no</td>\n<td></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>调试支持<p class="description mobile"><strong>SourceUrl, SourceMaps</strong></p></p></div></td>\n<td class="description desktop"><strong>SourceUrl, SourceMaps</strong></td>\n<td>未引入</td>\n<td>SourceMaps</td>\n<td><strong>SourceUrl, SourceMaps</strong></td>\n<td><strong>SourceUrl, SourceMaps</strong></td>\n<td>SourceMaps</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>依赖列表（Dependencies）<p class="description mobile">19MB / 127 个 package</p></p></div></td>\n<td class="description desktop">19MB / 127 个 package</td>\n<td>11MB / 118 个 package</td>\n<td><strong>1.2MB / 1 package</strong></td>\n<td>26MB / 131 个 package</td>\n<td>?MB / 3 个 package</td>\n<td></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>ES2015 <code>import</code>/<code>export</code><p class="description mobile"><strong>yes</strong> (webpack 2)</p></p></div></td>\n<td class="description desktop"><strong>yes</strong>\n (webpack 2)</td>\n<td>no</td>\n<td>no</td>\n<td><strong>yes</strong></td>\n<td><strong>yes</strong></td>\n<td>yes，通过 \n<a href="https://github.com/gcollazo/es6-module-transpiler-brunch">es6 module 转译器</a></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>require 中使用表达式 (guided) <code>require("./templates/" + template)</code><p class="description mobile"><strong>yes（包含所有匹配到的文件）</strong></p></p></div></td>\n<td class="description desktop"><strong>yes（包含所有匹配到的文件）</strong></td>\n<td>no♦</td>\n<td>no</td>\n<td>no</td>\n<td>no</td>\n<td>no</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>require 中使用表达式 (free) <code>require(moduleName)</code><p class="description mobile">手动配置</p></p></div></td>\n<td class="description desktop">手动配置</td>\n<td>no♦</td>\n<td>no</td>\n<td>no</td>\n<td>no</td>\n<td></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>生成单文件 bundle<p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>yes♦</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>间接 require <code>var r = require; r("./file")</code><p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>no♦</td>\n<td>no</td>\n<td>no</td>\n<td>no</td>\n<td></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>单独加载某个文件<p class="description mobile">no</p></p></div></td>\n<td class="description desktop">no</td>\n<td>yes</td>\n<td>no</td>\n<td>yes</td>\n<td>no</td>\n<td>no</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>混淆路径名称<p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>no</td>\n<td>部分</td>\n<td>yes</td>\n<td>未引入（路径名称未包含在 bundle 中）</td>\n<td>no</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>压缩<p class="description mobile"><a href="https://github.com/fabiosantoscode/terser">Terser</a></p></p></div></td>\n<td class="description desktop"><a href="https://github.com/fabiosantoscode/terser">Terser</a></td>\n<td>uglify, closure compiler</td>\n<td><a href="https://github.com/hughsk/uglifyify">uglifyify</a></td>\n<td>yes</td>\n<td><a href="https://github.com/TrySound/rollup-plugin-uglify">uglify-plugin</a></td>\n<td><a href="https://github.com/brunch/uglify-js-brunch">UglifyJS-brunch</a></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>使用 common bundle 构建多页应用<p class="description mobile">手动配置</p></p></div></td>\n<td class="description desktop">手动配置</td>\n<td><strong>yes</strong></td>\n<td>手动配置</td>\n<td>使用 bundle 算法</td>\n<td>no</td>\n<td>no</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>多个 bundle<p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>手动配置</td>\n<td>手动配置</td>\n<td>yes</td>\n<td>no</td>\n<td>yes</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>Node.js 内置库 <code>require("path")</code><p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>no</td>\n<td><strong>yes</strong></td>\n<td><strong>yes</strong></td>\n<td><a href="https://github.com/rollup/rollup-plugin-node-resolve">node-resolve-plugin</a></td>\n<td></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>其他 Node.js 相关内容<p class="description mobile">process，__dir/filename，global</p></p></div></td>\n<td class="description desktop">process，__dir/filename，global</td>\n<td>-</td>\n<td>process，__dir/filename，global</td>\n<td>process，__dir/filename，global for cjs</td>\n<td>global (\n<a href="https://github.com/rollup/rollup-plugin-commonjs">commonjs-plugin</a>\n)</td>\n<td></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>Plugin<p class="description mobile"><strong>yes</strong></p></p></div></td>\n<td class="description desktop"><strong>yes</strong></td>\n<td>yes</td>\n<td><strong>yes</strong></td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>预处理<p class="description mobile"><strong>loaders</strong></p></p></div></td>\n<td class="description desktop"><strong>loaders</strong></td>\n<td>loaders</td>\n<td>transforms</td>\n<td>plugin translate</td>\n<td>plugin transforms</td>\n<td>compilers，optimizers</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>浏览器替换项<p class="description mobile"><code>web_modules</code>，<code>.web.js</code>，package.json 字段，别名（alias）配置项</p></p></div></td>\n<td class="description desktop"><code>web_modules</code>\n，\n<code>.web.js</code>\n，package.json 字段，别名（alias）配置项</td>\n<td>别名配置项</td>\n<td>package.json 字段，别名配置项</td>\n<td>package.json，别名配置项</td>\n<td>no</td>\n<td></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>读取文件<p class="description mobile">文件系统</p></p></div></td>\n<td class="description desktop">文件系统</td>\n<td><strong>web</strong></td>\n<td>文件系统</td>\n<td>使用插件</td>\n<td>文件系统或者使用插件</td>\n<td>文件系统</td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>运行时开销<p class="description mobile"><strong>每个模块 243B + 20B + 每个依赖 4B</strong></p></p></div></td>\n<td class="description desktop"><strong>每个模块 243B + 20B + 每个依赖 4B</strong></td>\n<td>每个模块 14.7kB + 0B + 每个依赖 (3B + X)</td>\n<td>每个模块 415B + 25B + 每个依赖 (6B + 2X)</td>\n<td>自运行 bundle 5.5kB，所有 loader 和 polyfill 38kB，普通模块 0，293B CJS，ES2015 System.register 压缩 (gzip) 前 139B</td>\n<td><strong>ES2015 module 无开销</strong>\n （其他格式可能会有）</td>\n<td></td>\n</tr>\n<tr>\n<td><div class="title"><p>特性</p><p>webpack/webpack</p><p>jrburke/requirejs</p><p>substack/node-browserify</p><p>jspm/jspm-cli</p><p>rollup/rollup</p><p>brunch/brunch</p></div>\n<div class="content"><p>监听模式<p class="description mobile">yes</p></p></div></td>\n<td class="description desktop">yes</td>\n<td>未引入</td>\n<td><a href="https://github.com/browserify/watchify">watchify</a></td>\n<td>dev 中未引入</td>\n<td><a href="https://github.com/rollup/rollup-watch">rollup-watch</a></td>\n<td>yes</td>\n</tr>\n</tbody>\n</table>\n<p>♦ 为生成模式 (开发模式取反值)</p>\n<p>X 为路径字符串的长度</p>\n<h2 id="打包与加载">打包与加载<a href="#%E6%89%93%E5%8C%85%E4%B8%8E%E5%8A%A0%E8%BD%BD" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>了解 <em>loading</em> 和 <em>bundling</em> 模块的一些主要区别是很有必要的。比如像 <a href="https://github.com/systemjs/systemjs">SystemJS</a> 这类的工具，本质上是基于 <a href="https://github.com/jspm/jspm-cli">JSPM</a>, 常应用于在浏览器运行时加载和转译模块。这就与 webpack 有很大的差异，因为在 webpack 中模块是在浏览器加载之前，就已经被转译过（通过 loaders 转译）并打包的。</p>\n<p>每种方法都有其长，也有其短。如果是包括较多模块的大型网站和应用程序，在运行时加载和转译模块，会使其增加许多开销。故而，SystemJS 更加适用于模块较少的小型项目。不过，在判定哪些文件可以从服务端转到客户端时，<a href="https://http2.github.io/">HTTP/2</a> 倒是能提升一些速度。请注意，HTTP/2 并不会改变 <em>transpiling</em> 模块，所以在客户端会增加时间开销。</p>\n<h1 id="品牌指南">品牌指南<a href="#%E5%93%81%E7%89%8C%E6%8C%87%E5%8D%97" aria-hidden="true"><span class="icon icon-link"></span></a></h1>\n<p>在这里你可以找到 <strong>webpack</strong> 项目的品牌指南、资源和许可证。有关更多信息，请通过查看我们的官方<a href="https://github.com/webpack/media">媒资仓库</a>，并找到<a href="https://github.com/webpack/media/blob/master/LICENSE">许可证</a>来了解。点击任意图片下载它们。</p>\n<h2 id="名称">名称<a href="#%E5%90%8D%E7%A7%B0" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>webpack 应当<strong>总是</strong>以小写字母书写，即使在一句话的起始位置也是如此。</p>\n<h2 id="logo">Logo<a href="#logo" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>webpack logo 应放置在白色背景上，并且其周围有足够间距，如下所示:</p>\n<img src="https://raw.githubusercontent.com/webpack/media/master/logo/logo-on-white-bg.png" alt="webpack logo default with proper spacing on light background" />\n<p><a href="https://github.com/webpack/media/blob/master/logo/logo-on-white-bg.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/logo-on-white-bg.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/logo-on-white-bg.jpg">jpg</a></p>\n<p>只需将内部深蓝色正方体的大小加倍，就可以知道 logo 应占据多大空间。</p>\n<p>对于深色背景，可以使用 logo 的反色版本：</p>\n<div style="display: block; background: #111;">\n  <img src="https://raw.githubusercontent.com/webpack/media/master/logo/logo-on-dark-bg.png" alt="webpack logo default with proper spacing on light background" />\n</div>\n<p><a href="https://github.com/webpack/media/blob/master/logo/logo-on-dark-bg.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/logo-on-dark-bg.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/logo-on-dark-bg.jpg">jpg</a></p>\n<blockquote class="tip">\n<p>请尽可能的使用<strong>图标 + 文本</strong>的组合方式。</p>\n</blockquote>\n<h2 id="只包含图标">只包含图标<a href="#%E5%8F%AA%E5%8C%85%E5%90%AB%E5%9B%BE%E6%A0%87" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><strong>图标旨在用于布局有限的区域。如前所述，最好选择 图标+文字 的组合方式。</strong></p>\n<img src="https://raw.githubusercontent.com/webpack/media/master/logo/icon.png" width="250" alt="icon example">\n<p><a href="https://github.com/webpack/media/blob/master/logo/icon.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon.jpg">jpg</a></p>\n<p>适用于较大区域的正方形尺寸图标（例如头像或个人图片）：</p>\n<img src="https://raw.githubusercontent.com/webpack/media/master/logo/icon-square-big.png" width="250" alt="icon square big example">\n<p><a href="https://github.com/webpack/media/blob/master/logo/icon-square-big.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon-square-big.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon-square-big.jpg">jpg</a></p>\n<p>适用于较小区域的正方形尺寸图标（例如，favicon）：</p>\n<img src="https://raw.githubusercontent.com/webpack/media/master/logo/icon-square-small.png" width="50" alt="icon square small example">\n<p><a href="https://github.com/webpack/media/blob/master/logo/icon-square-small.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon-square-small.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon-square-small.jpg">jpg</a></p>\n<blockquote class="tip">\n<p>对于那些遵循我们的指南，并已经深入了解的人，我们还制作了一个专门用于自定义 emoji 符号的特殊小尺寸图片（例如，在 slack 或 gitter 频道 ;)）。</p>\n</blockquote>\n<img src="/assets/icon-square-small-slack.png" width="50" alt="icon square small example">\n<h2 id="字体">字体<a href="#%E5%AD%97%E4%BD%93" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>我们使用由一群极具天赋的人所设计的 <a href="http://atipofoundry.com/">Atipo Foundry</a> 这款漂亮字体，它来自 <a href="http://atipofoundry.com/fonts/geomanist">Geomanist Medium</a> 这个网站，并通过“随你付”的模式来提供完整的字体族。</p>\n<h2 id="调色板">调色板<a href="#%E8%B0%83%E8%89%B2%E6%9D%BF" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>在 <a href="https://opencollective.com/">Open Collective</a> 和 <a href="https://medium.com/u/840563ee2a56">Threadless</a> 的帮助下，以下颜色在我们整个网站中被以各种组合形式使用，并且在 <a href="https://webpack.threadless.com/collections/the-final-release-collection/">webpack 官方商城</a> 推出的时尚服装系列中也用了这些颜色！</p>\n<table>\n<thead>\n<tr>\n<th>颜色名称</th>\n<th>HEX 码</th>\n<th>RGB 码</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Malibu:<p class="description mobile">HEX <code>#8dd6f9</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#8dd6f9</code></td>\n<td><code>rgb: 141, 214, 249</code></td>\n<td><div style="background-color: #8dd6f9;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Denim:<p class="description mobile">HEX <code>#1d78c1</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#1d78c1</code></td>\n<td><code>rgb: 29, 120, 193</code></td>\n<td><div style="background-color: #1d78c1;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Fiord:<p class="description mobile">HEX <code>#465E69</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#465E69</code></td>\n<td><code>rgb: 70, 94, 105</code></td>\n<td><div style="background-color: #465E69;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Outer Space:<p class="description mobile">HEX <code>#2B3A42</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#2B3A42</code></td>\n<td><code>rgb: 43, 58, 66</code></td>\n<td><div style="background-color: #2B3A42;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>White:<p class="description mobile">HEX <code>#ffffff</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#ffffff</code></td>\n<td><code>rgb: 255, 255, 255</code></td>\n<td><div style="background-color: #ffffff;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Concrete:<p class="description mobile">HEX <code>#f2f2f2</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#f2f2f2</code></td>\n<td><code>rgb: 242, 242, 242</code></td>\n<td><div style="background-color: #f2f2f2;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Alto:<p class="description mobile">HEX <code>#dedede</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#dedede</code></td>\n<td><code>rgb: 222, 222, 222</code></td>\n<td><div style="background-color: #dedede;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Dusty Gray:<p class="description mobile">HEX <code>#999999</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#999999</code></td>\n<td><code>rgb: 153, 153, 153</code></td>\n<td><div style="background-color: #999999;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Dove Gray:<p class="description mobile">HEX <code>#666666</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#666666</code></td>\n<td><code>rgb: 102, 102, 102</code></td>\n<td><div style="background-color: #666666;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Emperor:<p class="description mobile">HEX <code>#535353</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#535353</code></td>\n<td><code>rgb: 83, 83, 83</code></td>\n<td><div style="background-color: #535353;">\n \n</div></td>\n</tr>\n<tr>\n<td><div class="title"><p>颜色名称</p><p>HEX 码</p><p>RGB 码</p><p>示例</p></div>\n<div class="content"><p>Mine Shaft:<p class="description mobile">HEX <code>#333333</code></p></p></div></td>\n<td class="description desktop">HEX \n<code>#333333</code></td>\n<td><code>rgb: 51, 51, 51</code></td>\n<td><div style="background-color: #333333;">\n \n</div></td>\n</tr>\n</tbody>\n</table>\n<p>此外，你可以直接从下面的链接，获取这些类型的文件：</p>\n<p><a href="https://raw.githubusercontent.com/webpack/media/master/design/webpack-palette.psd">psd</a> | <a href="https://raw.githubusercontent.com/webpack/media/master/design/webpack-palette.png">png</a>\n| <a href="https://raw.githubusercontent.com/webpack/media/master/design/webpack-palette.ai">ai</a> | <a href="https://raw.githubusercontent.com/webpack/media/master/design/webpack-palette.svg">svg</a></p>\n<h2 id="许可证">许可证<a href="#%E8%AE%B8%E5%8F%AF%E8%AF%81" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>logo 和品牌名称<strong>并不遵循 MIT 许可</strong>。请查看我们的<a href="https://github.com/webpack/media/blob/master/LICENSE">许可证</a>页面，以获取使用指南。</p>\n<h1 id="术语表">术语表<a href="#%E6%9C%AF%E8%AF%AD%E8%A1%A8" aria-hidden="true"><span class="icon icon-link"></span></a></h1>\n<p>该索引列出了整个 webpack 生态系统中的常用术语。</p>\n<h2 id="a">A<a href="#a" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/guides/asset-management/"><strong>Asset</strong></a>: 资源是对图像、字体、媒体和任何其他类型文件的统称，通常用于网站和其他应用程序中。这些文件通常在 <a href="/glossary/#o">output</a> 中最终输出为单独的文件，但也可以通过诸如 <a href="/loaders/style-loader">style-loader</a> 或 <a href="/loaders/url-loader">url-loader</a>之类的方法内联。</li>\n</ul>\n<h2 id="b">B<a href="#b" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/guides/getting-started/#creating-a-bundle"><strong>Bundle</strong></a>: bundle 由许多不同的模块生成，包含已经经过加载和编译过程的源文件的最终版本。</li>\n<li><a href="/guides/code-splitting"><strong>Bundle Splitting</strong></a>: 这个过程提供了一种优化构建的方法，允许 webpack 为单个应用程序生成多个 bundle 文件。因此，可以将每个 bundle 文件与影响其他文件的更改进行分离，从而减少重新发布并由此被客户端重新下载的代码量，并且运用览器缓存。</li>\n</ul>\n<h2 id="c">C<a href="#c" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><strong>Chunk</strong>: 此 webpack 特定术语在内部用于管理捆绑过程。输出束（bundle）由块组成，其中有几种类型（例如 entry 和 child ）。通常，<em>块</em> 直接与 <em>输出束</em> (bundle）相对应，但是，有些配置不会产生一对一的关系。</li>\n<li><a href="/guides/code-splitting/"><strong>Code Splitting</strong></a>: 代码分离指将代码分成不同的包/块，然后可以按需加载，而不是加载包含所有内容的单个包。</li>\n<li><a href="/concepts/configuration/"><strong>Configuration</strong></a>: webpack 的配置文件是导出一个对象的 JavaScript 文件。 webpack 根据配置对象定义的属性进行解析。</li>\n</ul>\n<h2 id="d">D<a href="#d" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/concepts/dependency-graph"><strong>Dependency Graph</strong></a>: 任何时候，一个文件依赖于另一个文件，webpack 就把此视为文件之间有 <em>依赖关系</em> 。从这些入口起点开始，webpack 递归地构建一个依赖图，这个依赖图包含着应用程序所需的每个模块。</li>\n</ul>\n<h2 id="e">E<a href="#e" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/concepts/entry-points"><strong>Entry Point</strong></a>: 入口起点告诉 webpack 从哪里开始，并遵循着依赖图知道要打包哪些文件。您可以将应用程序的入口起点视为要捆绑的内容的 <em>根上下文</em>。</li>\n</ul>\n<h2 id="h">H<a href="#h" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/concepts/hot-module-replacement"><strong>Hot Module Replacement (HMR)</strong></a>：模块热替换功能会在应用程序运行过程中替换、添加或删除 <code>模块</code>，而无需重新加载整个页面。</li>\n</ul>\n<h2 id="l">L<a href="#l" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/concepts/loaders"><strong>Loaders</strong></a>: loader 用于对模块的源代码进行转换。loader 可以使你在 <code>require()</code> 或"加载"模块时预处理文件。类似于一个 “task-runner”。</li>\n<li><a href="/guides/lazy-loading"><strong>Lazy Loading</strong></a>: 对应用程序的部分（块）进行懒加载的过程。换句话说，只有我们在真正需要它们的时候才进行加载。</li>\n</ul>\n<h2 id="m">M<a href="#m" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/concepts/modules"><strong>Module</strong></a>: Module 是离散功能块，相比于完整程序提供了更小的接触面。精心编写的模块提供了可靠的抽象和封装界限，使得应用程序中每个模块都具有条理清楚的设计和明确的目的。</li>\n<li><a href="/concepts/module-resolution/"><strong>Module Resolution</strong></a>：一个模块可以作为另一个模块的依赖模块。resolver 是一个库(library)，用于帮助找到模块的绝对路径，并在 <code>resolve.modules</code> 中指定的所有目录中搜索该模块.</li>\n<li><a href="/concepts/manifest"><strong>Manifest</strong></a>: 当完成打包并发送到浏览器时，会在运行时通过 Manifest 来解析和加载模块。</li>\n</ul>\n<h2 id="o">O<a href="#o" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li>\n<p><a href="/concepts/output"><strong>Output</strong></a>: 配置项指定将编译的文件输出到磁盘的位置。</p>\n<blockquote>\n<p><em>注意,即使可以存在多个入口起点，但只指定一个输出配置。</em></p>\n</blockquote>\n</li>\n</ul>\n<h2 id="p">P<a href="#p" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/concepts/plugins"><strong>Plugin</strong></a>: webpack 插件是一个具有 <code>apply</code> 属性的 JavaScript 对象。<code>apply</code> 属性会被 webpack compiler 调用，并且插件可在整个编译生命周期访问。这些包通常会以某种方式扩展编译功能。</li>\n</ul>\n<h2 id="r">R<a href="#r" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/guides/dependency-management/"><strong>Request</strong></a>: 指在 require/import 语句中的表达式，如在 <em>require("./template/" + name + ".ejs")</em> 中的请求是 <em>"./template/" + name + ".ejs"</em> 。</li>\n</ul>\n<h2 id="s">S<a href="#s" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/guides/scaffolding/"><strong>Scaffolding</strong></a>: 此功能允许使用可自定义的第三方初始化包创建 webpack 配置项。</li>\n<li><a href="/guides/shimming/"><strong>Shimming</strong></a>: 并非所有 JS 文件都可以直接与 webpack 一起使用。有些文件可能是不支持的模块格式，甚至不是任何模块格式。<code>shimming</code> 这时就会发挥作用。</li>\n</ul>\n<h2 id="t">T<a href="#t" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/configuration/target/"><strong>Target</strong></a>: 用户配置的部署目标 <a href="/configuration/target/">此处列出</a> 用于为特定环境编译，如浏览器、 NodeJS 或 Electron。</li>\n<li><a href="/guides/tree-shaking/"><strong>Tree Shaking</strong></a>: 删除未使用/多余的代码，或者更准确地说，实时代码导入。像 webpack 这样的编译器将通过分析各种 <code>import</code> 语句和导入代码的使用情况，来确定实际使用了依赖项的哪些部分来实现这一点，删除那些没有使用的 “树” 的部分。</li>\n</ul>\n<h2 id="v">V<a href="#v" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/concepts/entry-points/#separate-app-and-vendor-entries"><strong>Vendor Entry Point</strong></a>: 从 <code>app.js</code> 和 <code>vendors.js</code> 开始创建依赖图。这些依赖图完全是分开且独立的，允许使用 <code>CommonsChunkPlugin</code>，并将应用程序包的任何供应商（vendor）引用提取到你的供应商包中。有助于在 webpack 中实现一种称为 <a href="/guides/caching/">长期供应商缓存</a> 的常见模式。</li>\n</ul>\n<h2 id="w">W<a href="#w" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<ul>\n<li><a href="/"><strong>webpack</strong></a>: 一个用于现代 JavaScript 应用程序的高度可配置的 <a href="/concepts/modules">module</a> 打包工具。</li>\n</ul>\n<h1 id="vote">Vote<a href="#vote" aria-hidden="true"><span class="icon icon-link"></span></a></h1>\n<h1 id="遵循许可">遵循许可<a href="#%E9%81%B5%E5%BE%AA%E8%AE%B8%E5%8F%AF" aria-hidden="true"><span class="icon icon-link"></span></a></h1>\n<h2 id="webpack-1">webpack<a href="#webpack-1" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>webpack 遵循 <a href="https://github.com/webpack/webpack/blob/master/LICENSE">MIT 许可</a>。</p>\n<h2 id="webpack-logo-和-icon">webpack logo 和 icon<a href="#webpack-logo-%E5%92%8C-icon" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>webpack logo 和 icon 遵循不同的许可，\n具体可以查看<a href="https://github.com/webpack/media">这里</a></p>\n<h2 id="webpack-文档">webpack 文档<a href="#webpack-%E6%96%87%E6%A1%A3" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://webpack.docschina.org/">https://webpack.docschina.org/</a> 内容遵循 <a href="https://creativecommons.org/licenses/by/4.0/">Creative Commons BY 4.0</a> 许可，如果你在其他地方使用我们的内容，则需要放置许可证，并声明文档归属。</p>\n<h2 id="webpack-代码示例">webpack 代码示例<a href="#webpack-%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>代码示例使用 <a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0 1.0 Universal (CC0 1.0)（公共领域）</a> 许可，你可以自由使用它们。</p>\n'}}]);