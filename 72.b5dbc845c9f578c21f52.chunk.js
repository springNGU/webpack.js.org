(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{364:function(n,e,c){"use strict";c.r(e),e.default='<p>webpack 能够为其加载的所有脚本添加 <code>nonce</code>。要启用此功能，需要在引入的入口脚本中设置一个 <code>__webpack_nonce__</code> 变量。应该为每个唯一的页面视图生成和提供一个唯一的基于 hash 的 nonce，这就是为什么 <code>__webpack_nonce__</code> 要在入口文件中指定，而不是在配置中指定的原因。注意，<code>nonce</code> 应该是一个 base64 编码的字符串。</p>\n<h2 id="示例">示例<a href="#%E7%A4%BA%E4%BE%8B" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>在 entry 文件中：</p>\n<pre><code class="hljs language-js"><span class="token comment">// ...</span>\n__webpack_nonce__ <span class="token operator">=</span> <span class="token string">\'c29tZSBjb29sIHN0cmluZyB3aWxsIHBvcCB1cCAxMjM=\'</span><span class="token punctuation">;</span>\n<span class="token comment">// ...</span></code></pre>\n<h2 id="启用-csp">启用 CSP<a href="#%E5%90%AF%E7%94%A8-csp" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>注意，默认情况下不启用 CSP。需要与文档(document)一起发送相应的 <code>CSP</code> header 或 meta 标签 <code>&#x3C;meta http-equiv="Content-Security-Policy" ...></code>，以告知浏览器启用 CSP。以下是一个包含 CDN 白名单 URL 的 CSP header 的示例：</p>\n<pre><code class="hljs language-html">Content-Security-Policy: default-src \'self\'; script-src \'self\' https://trusted.cdn.com;</code></pre>\n<p>有关 CSP 和 <code>nonce</code> 属性的更多信息，请查看页面底部的<strong>延伸阅读</strong>部分。</p>\n'}}]);