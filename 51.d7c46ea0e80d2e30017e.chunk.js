(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{343:function(n,s,a){"use strict";a.r(s),s.default='<p>这些选项可以控制 webpack 如何通知「资源(asset)和入口起点超过指定文件限制」。\n此功能受到 <a href="https://github.com/webpack/webpack/issues/3216">webpack 性能评估</a>的启发。</p>\n<h2 id="performance"><code>performance</code><a href="#performance" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><code>object</code></p>\n<p>配置如何展示性能提示。例如，如果一个资源超过 250kb，webpack 会对此输出一个警告来通知你。</p>\n<h2 id="performancehints"><code>performance.hints</code><a href="#performancehints" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><code>string = \'warning\': \'error\' | \'warning\'</code> <code>boolean: false</code></p>\n<p>打开/关闭提示。此外，当找到提示时，告诉 webpack 抛出一个错误或警告。此属性默认设置为 <code>"warning"</code>。</p>\n<p>给定一个创建后超过 250kb 的资源：</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  performance<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    hints<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>不展示警告或错误提示。</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  performance<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    hints<span class="token punctuation">:</span> <span class="token string">\'warning\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>将展示一条警告，通知你这是体积大的资源。在开发环境，我们推荐这样。</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  performance<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    hints<span class="token punctuation">:</span> <span class="token string">\'error\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>将展示一条错误，通知你这是体积大的资源。在生产环境构建时，我们推荐使用 <code>hints: "error"</code>，有助于防止把体积巨大的 bundle 部署到生产环境，从而影响网页的性能。</p>\n<h2 id="performancemaxentrypointsize"><code>performance.maxEntrypointSize</code><a href="#performancemaxentrypointsize" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><code>number = 250000</code></p>\n<p>入口起点表示针对指定的入口，对于所有资源，要充分利用初始加载时(initial load time)期间。此选项根据入口起点的最大体积，控制 webpack 何时生成性能提示。</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  performance<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    maxEntrypointSize<span class="token punctuation">:</span> <span class="token number">400000</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="performancemaxassetsize"><code>performance.maxAssetSize</code><a href="#performancemaxassetsize" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><code>number = 250000</code></p>\n<p>资源(asset)是从 webpack 生成的任何文件。此选项根据单个资源体积(单位: bytes)，控制 webpack 何时生成性能提示。</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  performance<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    maxAssetSize<span class="token punctuation">:</span> <span class="token number">100000</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="performanceassetfilter"><code>performance.assetFilter</code><a href="#performanceassetfilter" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><code>function(assetFilename) => boolean</code></p>\n<p>此属性允许 webpack 控制用于计算性能提示的文件。默认函数如下：</p>\n<pre><code class="hljs language-js"><span class="token keyword">function</span> <span class="token function">assetFilter</span><span class="token punctuation">(</span>assetFilename<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token regex">/\\.map$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>assetFilename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n<p>你可以通过传递自己的函数来覆盖此属性：</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  performance<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    assetFilter<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>assetFilename<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> assetFilename<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">\'.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>以上示例将只给出 <code>.js</code> 文件的性能提示。</p>\n'}}]);