(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{405:function(n,s,a){"use strict";a.r(s),s.default='  <p>Loader for <a href="https://webpack.js.org/">webpack</a> to process CSS with <a href="https://postcss.org/">PostCSS</a></p>\n</div>\n<h2 id="install">Install<a href="#install" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> i -D postcss-loader</code></pre>\n<h2 id="usage">Usage<a href="#usage" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="configuration"><code>Configuration</code><a href="#configuration" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong><code>postcss.config.js</code></strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  parser<span class="token punctuation">:</span> <span class="token string">\'sugarss\'</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'postcss-import\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">\'postcss-preset-env\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">\'cssnano\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p>You can read more about common PostCSS Config <a href="https://github.com/michael-ciniawsky/postcss-load-config">here</a>.</p>\n<h3 id="config-cascade"><code>Config Cascade</code><a href="#config-cascade" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>You can use different <code>postcss.config.js</code> files in different directories.\nConfig lookup starts from <code>path.dirname(file)</code> and walks the file tree upwards until a config file is found.</p>\n<pre><code>|– components\n| |– component\n| | |– index.js\n| | |– index.png\n| | |– style.css (1)\n| | |– postcss.config.js (1)\n| |– component\n| | |– index.js\n| | |– image.png\n| | |– style.css (2)\n|\n|– postcss.config.js (1 &#x26;&#x26; 2 (recommended))\n|– webpack.config.js\n|\n|– package.json\n</code></pre>\n<p>After setting up your <code>postcss.config.js</code>, add <code>postcss-loader</code> to your <code>webpack.config.js</code>. You can use it standalone or in conjunction with <code>css-loader</code> (recommended). Use it <strong>after</strong> <code>css-loader</code> and <code>style-loader</code>, but <strong>before</strong> other preprocessor loaders like e.g <code>sass|less|stylus-loader</code>, if you use any.</p>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span> <span class="token string">\'postcss-loader\'</span> <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<blockquote>\n<p>⚠️  When <code>postcss-loader</code> is used standalone (without <code>css-loader</code>) don\'t use <code>@import</code> in your CSS, since this can lead to quite bloated bundles</p>\n</blockquote>\n<p><strong><code>webpack.config.js</code> (recommended)</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> importLoaders<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">\'postcss-loader\'</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#exec"><code>exec</code></a><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Enable PostCSS Parser support in \n<code>CSS-in-JS</code></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#syntaxes"><code>parser</code></a><p class="description mobile"><code>{String\\|Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Object}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Set PostCSS Parser</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#syntaxes"><code>syntax</code></a><p class="description mobile"><code>{String\\|Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Object}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Set PostCSS Syntax</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#syntaxes"><code>stringifier</code></a><p class="description mobile"><code>{String\\|Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Object}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Set PostCSS Stringifier</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#config"><code>config</code></a><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Set \n<code>postcss.config.js</code>\n config path &#x26;&#x26; \n<code>ctx</code></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#plugins"><code>plugins</code></a><p class="description mobile"><code>{Array\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Array\\|Function}</code></td>\n<td align="center"><code>[]</code></td>\n<td align="left">Set PostCSS Plugins</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#sourcemap"><code>sourceMap</code></a><p class="description mobile"><code>{String\\|Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Enable Source Maps</td>\n</tr>\n</tbody>\n</table>\n<h3 id="exec"><code>Exec</code><a href="#exec" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>If you use JS styles without the <a href="https://github.com/postcss/postcss-js"><code>postcss-js</code></a> parser, add the <code>exec</code> option.</p>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token punctuation">:</span> <span class="token regex">/\\.style.js$/</span><span class="token punctuation">,</span>\n  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> importLoaders<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> parser<span class="token punctuation">:</span> <span class="token string">\'sugarss\'</span><span class="token punctuation">,</span> exec<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<h3 id="config"><code>Config</code><a href="#config" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#path"><code>path</code></a><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">PostCSS Config Directory</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#context-ctx"><code>context</code></a><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">PostCSS Config Context</td>\n</tr>\n</tbody>\n</table>\n<h4 id="path"><code>Path</code><a href="#path" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>You can manually specify the path to search for your config (<code>postcss.config.js</code>) with the <code>config.path</code> option. This is needed if you store your config  in a separate e.g <code>./config || ./.config</code> folder.</p>\n<blockquote>\n<p>⚠️  Otherwise it is <strong>unnecessary</strong> to set this option and is <strong>not</strong> recommended</p>\n<p>⚠️  Note that you <strong>can\'t</strong> use a <strong>filename</strong> other than the <a href="https://github.com/michael-ciniawsky/postcss-load-config#usage">supported config formats</a> (e.g <code>.postcssrc.js</code>, <code>postcss.config.js</code>), this option only allows you to manually specify the <strong>directory</strong> where config lookup should <strong>start</strong> from</p>\n</blockquote>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      path<span class="token punctuation">:</span> <span class="token string">\'path/to/.config/\'</span> ✅\n      path<span class="token punctuation">:</span> <span class="token string">\'path/to/.config/css.config.js\'</span> ❌\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<h4 id="context-ctx"><code>Context (ctx)</code><a href="#context-ctx" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><code>env</code><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>\'development\'</code></td>\n<td align="left"><code>process.env.NODE_ENV</code></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><code>file</code><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>loader.resourcePath</code></td>\n<td align="left"><code>extname</code>\n, \n<code>dirname</code>\n, \n<code>basename</code></td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><code>options</code><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>{}</code></td>\n<td align="left">Options</td>\n</tr>\n</tbody>\n</table>\n<p><code>postcss-loader</code> exposes context <code>ctx</code> to the config file, making your <code>postcss.config.js</code> dynamic, so can use it to do some real magic ✨</p>\n<p><strong><code>postcss.config.js</code></strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> options<span class="token punctuation">,</span> env <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  parser<span class="token punctuation">:</span> file<span class="token punctuation">.</span>extname <span class="token operator">===</span> <span class="token string">\'.sss\'</span> <span class="token operator">?</span> <span class="token string">\'sugarss\'</span> <span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'postcss-import\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> root<span class="token punctuation">:</span> file<span class="token punctuation">.</span>dirname <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">\'postcss-preset-env\'</span><span class="token punctuation">:</span> options<span class="token punctuation">[</span><span class="token string">\'postcss-preset-env\'</span><span class="token punctuation">]</span> <span class="token operator">?</span> options<span class="token punctuation">[</span><span class="token string">\'postcss-preset-env\'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token string">\'cssnano\'</span><span class="token punctuation">:</span> env <span class="token operator">===</span> <span class="token string">\'production\'</span> <span class="token operator">?</span> options<span class="token punctuation">.</span>cssnano <span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      ctx<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'postcss-preset-env\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token operator">...</span>options<span class="token punctuation">}</span><span class="token punctuation">,</span>\n        cssnano<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token operator">...</span>options<span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<h3 id="plugins"><code>Plugins</code><a href="#plugins" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    ident<span class="token punctuation">:</span> <span class="token string">\'postcss\'</span><span class="token punctuation">,</span>\n    plugins<span class="token punctuation">:</span> <span class="token punctuation">(</span>loader<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>\n      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'postcss-import\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span> root<span class="token punctuation">:</span> loader<span class="token punctuation">.</span>resourcePath <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'postcss-preset-env\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'cssnano\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<blockquote>\n<p>⚠️  webpack requires an identifier (<code>ident</code>) in <code>options</code> when <code>{Function}/require</code> is used (Complex Options). The <code>ident</code> can be freely named as long as it is unique. It\'s recommended to name it (<code>ident: \'postcss\'</code>)</p>\n</blockquote>\n<h3 id="syntaxes"><code>Syntaxes</code><a href="#syntaxes" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#parser"><code>parser</code></a><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Custom PostCSS Parser</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#syntax"><code>syntax</code></a><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Custom PostCSS Syntax</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><a href="#stringifier"><code>stringifier</code></a><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Custom PostCSS Stringifier</td>\n</tr>\n</tbody>\n</table>\n<h4 id="parser"><code>Parser</code><a href="#parser" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token punctuation">:</span> <span class="token regex">/\\.sss$/</span><span class="token punctuation">,</span>\n  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token operator">...</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> parser<span class="token punctuation">:</span> <span class="token string">\'sugarss\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<h4 id="syntax"><code>Syntax</code><a href="#syntax" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token operator">...</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> syntax<span class="token punctuation">:</span> <span class="token string">\'sugarss\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<h4 id="stringifier"><code>Stringifier</code><a href="#stringifier" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token operator">...</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> stringifier<span class="token punctuation">:</span> <span class="token string">\'midas\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<h3 id="sourcemap"><code>SourceMap</code><a href="#sourcemap" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Enables source map support, <code>postcss-loader</code> will use the previous source map given by other loaders and update it accordingly, if no previous loader is applied before <code>postcss-loader</code>, the loader will generate a source map for you.</p>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token punctuation">:</span> <span class="token regex">/\\.css/</span><span class="token punctuation">,</span>\n  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<h4 id="inline"><code>\'inline\'</code><a href="#inline" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>You can set the <code>sourceMap: \'inline\'</code> option to inline the source map\nwithin the CSS directly as an annotation comment.</p>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span>\n  options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    sourceMap<span class="token punctuation">:</span> <span class="token string">\'inline\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<pre><code class="hljs language-css"><span class="token selector">.class</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n\n<span class="token comment">/*# sourceMappingURL=data:application/json;base64, ... */</span></code></pre>\n<h2 id="examples">Examples<a href="#examples" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="stylelint"><code>Stylelint</code><a href="#stylelint" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span>\n      options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        ident<span class="token punctuation">:</span> <span class="token string">\'postcss\'</span><span class="token punctuation">,</span>\n        plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'postcss-import\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'stylelint\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token operator">...</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<h3 id="autoprefixing"><code>Autoprefixing</code><a href="#autoprefixing" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span>\n      options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        ident<span class="token punctuation">:</span> <span class="token string">\'postcss\'</span><span class="token punctuation">,</span>\n        plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'autoprefixer\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span>options<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token operator">...</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<blockquote>\n<p>:warning: <a href="https://github.com/csstools/postcss-preset-env"><code>postcss-preset-env</code></a> includes <a href="https://github.com/postcss/autoprefixer"><code>autoprefixer</code></a>, so adding it separately is not necessary if you already use the preset.</p>\n</blockquote>\n<h3 id="css-modules"><code>CSS Modules</code><a href="#css-modules" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>This loader <a href="https://github.com/webpack/css-loader/issues/137">cannot be used</a> with <a href="https://github.com/webpack/css-loader#css-modules">CSS Modules</a> out of the box due\nto the way <code>css-loader</code> processes file imports. To make them work properly,\neither add the css-loader’s <a href="https://github.com/webpack-contrib/css-loader#importloaders"><code>importLoaders</code></a> option.</p>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> modules<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> importLoaders<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">\'postcss-loader\'</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<p>or use <a href="https://github.com/css-modules/postcss-modules">postcss-modules</a> instead of <code>css-loader</code>.</p>\n<h3 id="css-in-js"><code>CSS-in-JS</code><a href="#css-in-js" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>If you want to process styles written in JavaScript, use the <a href="https://github.com/postcss/postcss-js">postcss-js</a> parser.</p>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token punctuation">{</span>\n  test<span class="token punctuation">:</span> <span class="token regex">/\\.style.js$/</span><span class="token punctuation">,</span>\n  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> importLoaders<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> loader<span class="token punctuation">:</span> <span class="token string">\'postcss-loader\'</span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">{</span> parser<span class="token punctuation">:</span> <span class="token string">\'postcss-js\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">\'babel-loader\'</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<p>As result you will be able to write styles in the following way</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> colors <span class="token keyword">from</span> <span class="token string">\'./styles/colors\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token string">\'.menu\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      color<span class="token punctuation">:</span> colors<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n      height<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n      <span class="token string">\'&#x26;_link\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      color<span class="token punctuation">:</span> <span class="token string">\'white\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<blockquote>\n<p>:warning: If you are using Babel you need to do the following in order for the setup to work</p>\n<ol>\n<li>Add <a href="https://github.com/59naga/babel-plugin-add-module-exports">babel-plugin-add-module-exports</a> to your configuration</li>\n<li>You need to have only one <strong>default</strong> export per style module</li>\n</ol>\n</blockquote>\n<h3 id="extract-css"><a href="https://github.com/webpack-contrib/mini-css-extract-plugin">Extract CSS</a><a href="#extract-css" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong><code>webpack.config.js</code></strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> devMode <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span>\n\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          devMode <span class="token operator">?</span> <span class="token string">\'style-loader\'</span> <span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'postcss-loader\'</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token punctuation">:</span> devMode <span class="token operator">?</span> <span class="token string">\'[name].css\'</span> <span class="token punctuation">:</span> <span class="token string">\'[name].[hash].css\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n<h2 id="maintainers">Maintainers<a href="#maintainers" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n  <tbody>\n    <tr>\n      <td align="center">\n        <a href="https://github.com/michael-ciniawsky">\n          <img width="150" height="150" src="https://github.com/michael-ciniawsky.png?v=3&s=150">\n          </br>\n          Michael Ciniawsky\n        </a>\n      </td>\n      <td align="center">\n        <a href="https://github.com/evilebottnawi">\n          <img width="150" height="150" src="https://github.com/evilebottnawi.png?v=3&s=150">\n          </br>\n          Alexander Krasnoyarov\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n'}}]);