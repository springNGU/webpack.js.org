(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{368:function(n,s,a){"use strict";a.r(s),s.default='<h2 id="每个入口使用多种文件类型">每个入口使用多种文件类型<a href="#%E6%AF%8F%E4%B8%AA%E5%85%A5%E5%8F%A3%E4%BD%BF%E7%94%A8%E5%A4%9A%E7%A7%8D%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>在不使用 <code>import</code> 样式文件的应用程序中（预单页应用程序或其他原因），使用一个值数组结构的 <a href="/configuration/entry-context/#entry">entry</a>，并且在其中传入不同类型的文件，可以实现将 CSS 和 JavaScript（和其他）文件分离在不同的 bundle。</p>\n<p>举个例子。我们有一个具有两种页面类型的 PHP 应用程序：home(首页) 和 account(帐户)。home 与应用程序其余部分（account 页面）具有不同的布局和不可共享的 JavaScript。我们想要从应用程序文件中输出 home 页面的 <code>home.js</code> 和 <code>home.css</code>，为 account 页面输出 <code>account.js</code> 和 <code>account.css</code>。</p>\n<p><strong>home.js</strong></p>\n<pre><code class="hljs language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'home page type\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><strong>home.scss</strong></p>\n<pre><code class="hljs language-scss">// home page individual styles\n</code></pre>\n<p><strong>account.js</strong></p>\n<pre><code class="hljs language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'account page type\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><strong>account.scss</strong></p>\n<pre><code class="hljs language-scss">// account page individual styles\n</code></pre>\n<p>我们将在 <code>production(生产)</code> 模式中使用 <a href="/plugins/mini-css-extract-plugin/"><code>MiniCssExtractPlugin</code></a> 作为 CSS 的一个最佳实践。</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  mode<span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span><span class="token punctuation">,</span>\n  entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    home<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./home.js\'</span><span class="token punctuation">,</span> <span class="token string">\'./home.scss\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    account<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./account.js\'</span><span class="token punctuation">,</span> <span class="token string">\'./account.scss\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    filename<span class="token punctuation">:</span> <span class="token string">\'[name].js\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.scss$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// fallback to style-loader in development</span>\n          process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span> <span class="token operator">?</span> <span class="token string">\'style-loader\'</span> <span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token punctuation">:</span> <span class="token string">\'[name].css\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>由于我们未指定其他输出路径，因此使用以上配置运行 webpack 将输出到 <code>./dist</code>。<code>./dist</code> 目录下现在包含四个文件：</p>\n<ul>\n<li>home.js</li>\n<li>home.css</li>\n<li>account.js</li>\n<li>account.css</li>\n</ul>\n'}}]);